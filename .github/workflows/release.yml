name: Foodgram release

on:
  push:
    branches:
      - main_dev

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.12-alpine
        env:
          POSTGRES_USER: foodgram_user
          POSTGRES_PASSWORD: foodgram_password
          POSTGRES_DB: foodgram_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready -- health-interval 10s --health-timeout 5s -- health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python_version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install flake8==7.0.0 flake8-isort
          pip install -r ./backend/foodgram_backend/requirements.txt
      - name: Tests with flake8
        env:
          POSTGRES_USER: foodgram_user
          POSTGRES_PASSWORD: foodgram_password
          POSTGRES_DB: foodgram_db
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
        run: |
          python -m flake8

  backend_build_and_push_to_dockerhub:
    name: Build and Push backend image to Dockerhub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend/foodgram/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  frontend_build_and_push_to_dockerhub:
    name: Build and Push frontend image to Dockerhub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  gateway_build_and_push_to_dockerhub:
    name: Build and Push gateway image to Dockerhub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub gateway
        uses: docker/build-push-action@v4
        with:
          context: ./infra/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_gateway:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - backend_build_and_push_to_dockerhub
      - frontend_build_and_push_to_dockerhub
      - gateway_build_and_push_to_dockerhub
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Copy docker-compose.release.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USER }}
          key: ${{ secrets.HOST_SSH_KEY }}
          passphrase: ${{ secrets.HOST_SSH_PASSWORD }}
          source: "docker-compose.release.yml"
          target: "foodgram"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USER }}
          key: ${{ secrets.HOST_SSH_KEY }}
          passphrase: ${{ secrets.HOST_SSH_PASSWORD }}
          script: |
            cd foodgram
            sudo docker compose -f docker-compose.release.yml pull
            sudo docker compose -f docker-compose.release.yml down
            sudo docker compose -f docker-compose.release.yml up -d
            sudo docker compose -f docker-compose.release.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.release.yml exec backend python manage.py collectstatic
            sudo docker compose -f docker-compose.release.yml exec backend cp -r /app/collected_static/. /backend_static/static/

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main_dev'
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            Repository: ${{ github.repository }}
            
            Sea changes: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
            
            **Deployment successfuly completed!**